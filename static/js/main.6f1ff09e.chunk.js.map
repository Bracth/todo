{"version":3,"sources":["images/icon-sun.svg","images/icon-moon.svg","components/Header.jsx","components/TodoInput.jsx","images/icon-cross.svg","components/TodoItem.jsx","components/TodoList.jsx","images/bg-desktop-dark.jpg","images/bg-desktop-light.jpg","components/TodoBotton.jsx","App.jsx","index.js","scss/TodoItem.module.scss"],"names":["Header","themeDark","HandelChangeTheme","themeIcon","sun","moon","className","id","styles","title","onClick","button","src","alt","TodoInput","ToggleInput","todoTaskRef","useRef","color","onSubmit","e","preventDefault","task","current","value","ref","type","name","placeholder","TodoItem","todo","ToggleCross","ToggleCheckbox","completed","checkClass","checked","onChange","cross","TodoList","todos","HandleDeletingTodo","HandleChangeCompleted","newTodos","filter","find","map","TodoButton","ToggleClearCompleted","uncompletedTodos","textColor","length","App","useState","setTodos","setThemeDark","backgroundImage","darkImage","lightImage","newTodo","uuidv4","HandleTodoAdd","NewTodos","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6f1ff09e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import sun from \"../images/icon-sun.svg\"\nimport moon from \"../images/icon-moon.svg\"\nimport styles from \"../scss/TodoItem.module.scss\"\n\n\nexport default function Header({themeDark, HandelChangeTheme}) { \n\nlet themeIcon = sun;\n\nif (themeDark === false) {\n        themeIcon = moon;\n}\n\nconst HandleClickOnIcon = () => {\n        themeDark = !themeDark;\n        HandelChangeTheme(themeDark)\n}\n\nreturn( <> \n<div className=\"row mb-4 justify-content-between\">\n        <div className=\"col-auto me-auto\">\n                <h1 id={styles.title} className=\"text-white\">TODO</h1>\n        </div>\n        <div className=\"col-auto\">\n                <button onClick={HandleClickOnIcon} className={styles.button}>\n                <img src={themeIcon} alt=\"\" />\n                </button>\n        </div>\n</div>\n</>);}","import { useRef } from \"react\";\n\nexport default function TodoInput({ToggleInput, themeDark}){ \n\nconst todoTaskRef = useRef();\n\nlet color = \"\";\n\nif (!themeDark) {\n    color = \"bg-light text-primary\";\n}\n\nconst HandleInputSubmit = (e) => {\n     e.preventDefault();\n     const task = todoTaskRef.current.value; \n    ToggleInput(task)\n    todoTaskRef.current.value = null;\n    }\n\nreturn(<>\n\n<div className=\"row my-3\">\n    <div className=\"col\">\n        <form onSubmit={HandleInputSubmit}>\n        <input \n            ref={todoTaskRef}\n            type=\"text\" \n            name=\"todo\" \n            id=\"todo-input\" \n            placeholder=\"Create a new todo...\"\n            className={`form-control form-control-lg ${color}`}/>\n        </form>\n    </div>\n</div> \n</> );}","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import styles from \"../scss/TodoItem.module.scss\";\nimport cross from \"../images/icon-cross.svg\";\n\nexport default function TodoItem({todo, ToggleCross, ToggleCheckbox, themeDark}){\n\nlet color = \"\";\n\nif (!themeDark) {\n    color = \"bg-light text-primary\";\n}\n\n\nconst {id, task, completed} = todo;\nlet checkClass = \"\";\n\nconst HandleCross = () => {\n    ToggleCross(id);\n}\n\nconst HandleCheckbox = () => {\n    ToggleCheckbox(id);\n}\n\nif(completed) { checkClass = \"text-decoration-line-through text-muted\" } \n\nreturn (<>\n    <li className={`list-group-item ${color}`}>\n        <div className=\"d-flex bd-highlight mb-4\">\n             <div className=\" bd-highlight\">\n                 <input \n                    checked={completed}\n                   onChange={HandleCheckbox}\n                    type=\"checkbox\" \n                    className=\"form-check-input mt-2\"/>\n             </div>\n            <div className=\" bd-highlight\">\n                {}\n                <span className={`m-3 fs-5 ${checkClass}`}> \n                     {task} \n                    </span>\n            </div>\n            <div className=\"ms-auto  bd-highlight\">\n                 <button   \n                        onClick={HandleCross}\n                     className={`${styles.button}`}>\n                    <img src={cross} alt=\"Cross\" />\n                    </button>\n            </div>\n        </div>\n    </li>\n</>)}","import TodoItem from \"./TodoItem\"\n\nexport default function TodoList({todos, HandleDeletingTodo, HandleChangeCompleted, themeDark}) {\n\nconst ToggleCross = (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    HandleDeletingTodo(newTodos);\n}\n\nconst ToggleCheckbox = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.completed = !todo.completed;\n    HandleChangeCompleted(newTodos);\n}\n\n return( <>\n<div className=\"row\">\n    <div className=\"col\">\n        <ul className=\"list-group\"> \n            { todos &&\n                todos.map((todo) => <TodoItem \n                    key={todo.id} \n                    todo={todo} \n                    ToggleCheckbox={ToggleCheckbox}\n                    ToggleCross={ToggleCross}\n                    themeDark={themeDark}/>)}\n        </ul>\n    </div>\n</div>\n</>);}","export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","import styles from \"../scss/TodoItem.module.scss\"\n\nexport default function TodoButton({todos, ToggleClearCompleted, themeDark}) {\nconst uncompletedTodos = todos.filter((todo) => !todo.completed)\n\nconst HandleClearCompleted = () => {  \n    const newTodos = todos.filter((todo) => !todo.completed)\n    ToggleClearCompleted(newTodos)\n}\n\nlet color = \"\";\nlet textColor = \"secondary\";\n\nif (!themeDark) {\n    color = \"bg-light\";\n    textColor = \"primary\"\n}\n\n\n\nreturn <>\n\n   \n     <div className={`card bg-primary text-${textColor} ${color}`}>\n         <div className=\"card-body row\">\n             <div className=\"col-auto me-auto\">\n              <span>{uncompletedTodos.length} item left</span>\n             </div>\n              <div className=\"col-auto\">\n                  <button onClick={HandleClearCompleted} className={`text-${textColor} ${styles.button}`}>Clear Completed</button>\n             </div>\n         </div>\n     </div>\n  \n\n</>}","import \"./custom.scss\"\nimport Header from \"./components/Header\";\nimport \"./scss/body.scss\"\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport { useState } from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport darkImage from \"./images/bg-desktop-dark.jpg\"\nimport lightImage from \"./images/bg-desktop-light.jpg\"\nimport TodoButton from \"./components/TodoBotton\";\n\n\nfunction App() {\n\nconst [todos, setTodos] = useState([]);\nconst [themeDark, setThemeDark] = useState(true);\nlet backgroundImage = darkImage;\n\nconst HandelChangeTheme = (themeDark) => {\n  setThemeDark(\nthemeDark);\n}\n\nconst HandleTodoAdd = (task) => {\n    const newTodo = {id:uuidv4(), task: task, completed: false}\n    setTodos([...todos, newTodo]);\n}\n\nconst ToggleInput = (task) => {\n    HandleTodoAdd(task);\n}\n\nconst HandleDeletingTodo = (NewTodos) => {\n  setTodos(NewTodos);\n}\n\n\nconst HandleChangeCompleted = (newTodos) => {\n  setTodos(newTodos);\n}\n\nconst ToggleClearCompleted = (newTodos) => {\n  setTodos(newTodos);\n}\n\nif (!themeDark) {\n  backgroundImage = lightImage;\n}\n\n  return (<>\n  <img src={backgroundImage} alt=\"Background\" className=\"background-image\"/>\n  <main className=\"container my-5\">\n  <Header themeDark={themeDark} HandelChangeTheme={HandelChangeTheme}/>\n  <TodoInput themeDark={themeDark} ToggleInput={ToggleInput}/>\n  <TodoList todos={todos} HandleChangeCompleted={HandleChangeCompleted} HandleDeletingTodo={HandleDeletingTodo} themeDark={themeDark}/>\n  <TodoButton todos={todos} ToggleClearCompleted={ToggleClearCompleted} themeDark={themeDark}/>\n</main>\n  </>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TodoItem_button__2V3iV\",\"title\":\"TodoItem_title__2sdxI\"};"],"sourceRoot":""}